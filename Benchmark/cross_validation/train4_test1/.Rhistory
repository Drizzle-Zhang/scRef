axis.text.x = element_text(size = 9))
ggsave(filename = paste0("/Combine_Sum_GSEA_",
paste0(as.character(vec.dose), collapse = ''), ".png"),
path = path.plot, plot = plot.male,
height = 12, width = 24, units = 'cm')
# heatmap
df.GSEA.male <- df.GSEA[as.character(df.ks.male.filter$pathway),]
df.heatmap.male <- data.frame(stringsAsFactors = F)
for (pathway in row.names(df.GSEA.male)) {
for (sub.time in names(df.GSEA.male)) {
df.heatmap.male <-
rbind(df.heatmap.male,
data.frame(pathway = pathway, time = sub.time,
score = df.GSEA.male[pathway, sub.time],
stringsAsFactors = F))
}
}
df.heatmap.male$pathway <-
factor(df.heatmap.male$pathway,
levels = as.character(df.ks.male.filter$pathway), ordered = T)
plot.heatmap.male <-
ggplot(data = df.heatmap.male,
aes(x = time, y = pathway, fill = score)) +
geom_tile() +
scale_fill_gradient2(low = muted("blue"), high = muted("red")) +
labs(x = 'Time', y = 'Pathway', fill = 'Enrichment Score') +
theme(panel.background = element_rect(color = 'white', size = 1.5,
fill = 'transparent'),
axis.ticks = element_blank(),
axis.text.x = element_text(size = 9),
legend.text = element_text(size = 12))
ggsave(filename = paste0("/Combine_Heatmap_GSEA_",
paste0(as.character(vec.dose), collapse = ''), ".png"),
path = path.plot, plot = plot.heatmap.male,
height = 12, width = 20, units = 'cm')
library(scales)
plot.heatmap.male <-
ggplot(data = df.heatmap.male,
aes(x = time, y = pathway, fill = score)) +
geom_tile() +
scale_fill_gradient2(low = muted("blue"), high = muted("red")) +
labs(x = 'Time', y = 'Pathway', fill = 'Enrichment Score') +
theme(panel.background = element_rect(color = 'white', size = 1.5,
fill = 'transparent'),
axis.ticks = element_blank(),
axis.text.x = element_text(size = 9),
legend.text = element_text(size = 12))
ggsave(filename = paste0("/Combine_Heatmap_GSEA_",
paste0(as.character(vec.dose), collapse = ''), ".png"),
path = path.plot, plot = plot.heatmap.male,
height = 12, width = 20, units = 'cm')
file.MCA <- '/home/drizzle_zhang/scRef/try_data/MCA_combined_mouse_uniform.txt'
df.MCA <- read.table(file.MCA, header=T, row.names=1, sep='\t', check.name=F)
=
=
errorCondition('123')
fpm.MCA <- fpm(obj.DESeq.MCA, robust = T)
BiocManager::install('SingleR')
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("SingleR")
install.packages("SingleR")
devtools::install_github("pcahan1/singleCellNet")
install.packages('igraph')
install.packages('xgboost')
TrueLabelsPath <- paste0(OutputDir, 'singleCellNet_True_Labels.csv')
PredLabelsPath <- paste0(OutputDir, 'singleCellNet_Pred_Labels.csv')
res.singleCellNet <- evaluate(TrueLabelsPath, PredLabelsPath)
devtools::install_github("BatadaLab/scID")
devtools::install_github("BatadaLab/scID")
devtools::install_github("BatadaLab/scID")
devtools::install_github("BatadaLab/scID")
devtools::install_github("BatadaLab/scID")
devtools::install_github("BatadaLab/scID")
devtools::install_github("BatadaLab/scID")
devtools::install_github("BatadaLab/scID")
devtools::install_github("BatadaLab/scID")
devtools::install_github("BatadaLab/scID")
devtools::install_github("BatadaLab/scID")
devtools::install_github("BatadaLab/scID")
devtools::install_github("BatadaLab/scID")
BiocManager::install("MAST")
BiocManager::install("MAST")
BiocManager::install("MAST")
setwd('/home/drizzle_zhang/my_git/scRef/Benchmark/cross_validation/train4_test1')
source('./Cross_Validation.R')
source('./method_functions.R')
source('./evaluate.R')
path.input <- '/home/drizzle_zhang/scRef/'
path.output <- '/home/drizzle_zhang/scRef/cross_validation/train4_test1/'
# generate cross validation dataset
LabelsPath <- paste0(path.input, 'summary/Zeisel_exp_sc_mat_cluster_original.txt')
OutputDir <- path.output
# Cross_Validation(LabelsPath, OutputDir)
DataPath <- paste0(path.input, 'summary/Zeisel_exp_sc_mat.txt')
LabelsPath <- paste0(path.input, 'summary/Zeisel_exp_sc_mat_cluster_original.txt')
CV_RDataPath <- paste0(path.output, 'CV_folds.RData')
TrueLabelsPath <- paste0(OutputDir, 'SingleR_True_Labels.csv')
PredLabelsPath <- paste0(OutputDir, 'SingleR_Pred_Labels.csv')
res.SingleR <- evaluate(TrueLabelsPath, PredLabelsPath)
res.SingleR
names(res.SingleR$F1)
df.sub <- data.frame(term = names(res.SingleR$F1),
methods = rep('SingleR', length(res.SingleR$F1)),
value = res.SingleR$F1, stringsAsFactors = F)
df.sub
# heatmap
df.heatmap <- data.frame(stringsAsFactors = F)
df.sub <- data.frame(term = names(res.SingleR$F1),
method = rep('SingleR', length(res.SingleR$F1)),
value = res.SingleR$F1, stringsAsFactors = F)
df.sub <- rbind(df.sub,
data.frame(term = 'macro F1', method = 'SingleR',
value = res.SingleR$Mean_F1, stringsAsFactors = F))
df.sub <- rbind(df.sub,
data.frame(term = 'Accuracy', method = 'SingleR',
value = res.SingleR$Acc, stringsAsFactors = F))
df.heatmap <- rbind(df.heatmap, df.sub)
df.heatmap
# heatmap
df.heatmap <- data.frame(stringsAsFactors = F)
# SingleR
# run_SingleR(DataPath,LabelsPath,CV_RDataPath,OutputDir)
TrueLabelsPath <- paste0(OutputDir, 'SingleR_True_Labels.csv')
PredLabelsPath <- paste0(OutputDir, 'SingleR_Pred_Labels.csv')
res.SingleR <- evaluate(TrueLabelsPath, PredLabelsPath)
df.sub <- data.frame(term = names(res.SingleR$F1),
method = rep('SingleR', length(res.SingleR$F1)),
value = res.SingleR$F1, stringsAsFactors = F)
df.sub <- rbind(df.sub,
data.frame(term = 'macro F1', method = 'SingleR',
value = res.SingleR$Mean_F1, stringsAsFactors = F))
df.sub <- rbind(df.sub,
data.frame(term = 'Accuracy', method = 'SingleR',
value = res.SingleR$Acc, stringsAsFactors = F))
df.heatmap <- rbind(df.heatmap, df.sub)
# scmap
# run_scmap(DataPath,LabelsPath,CV_RDataPath,OutputDir)
TrueLabelsPath <- paste0(OutputDir, 'scmapcell_True_Labels.csv')
PredLabelsPath <- paste0(OutputDir, 'scmapcell_Pred_Labels.csv')
res.scmapcell <- evaluate(TrueLabelsPath, PredLabelsPath)
df.sub <- data.frame(term = names(res.scmapcell$F1),
method = rep('scmap-cell', length(res.scmapcell$F1)),
value = res.scmapcell$F1, stringsAsFactors = F)
df.sub <- rbind(df.sub,
data.frame(term = 'macro F1', method = 'scmap-cell',
value = res.scmapcell$Mean_F1, stringsAsFactors = F))
df.sub <- rbind(df.sub,
data.frame(term = 'Accuracy', method = 'scmap-cell',
value = res.scmapcell$Acc, stringsAsFactors = F))
df.heatmap <- rbind(df.heatmap, df.sub)
PredLabelsPath <- paste0(OutputDir, 'scmapcluster_Pred_Labels.csv')
res.scmapcluster <- evaluate(TrueLabelsPath, PredLabelsPath)
df.sub <- data.frame(term = names(res.scmapcluster$F1),
method = rep('scmap-cluster', length(res.scmapcluster$F1)),
value = res.scmapcluster$F1, stringsAsFactors = F)
df.sub <- rbind(df.sub,
data.frame(term = 'macro F1', method = 'scmap-cluster',
value = res.scmapcluster$Mean_F1, stringsAsFactors = F))
df.sub <- rbind(df.sub,
data.frame(term = 'Accuracy', method = 'scmap-cluster',
value = res.scmapcluster$Acc, stringsAsFactors = F))
df.heatmap <- rbind(df.heatmap, df.sub)
# CHETAH
# run_CHETAH(DataPath,LabelsPath,CV_RDataPath,OutputDir)
TrueLabelsPath <- paste0(OutputDir, 'CHETAH_True_Labels.csv')
PredLabelsPath <- paste0(OutputDir, 'CHETAH_Pred_Labels.csv')
res.CHETAH <- evaluate(TrueLabelsPath, PredLabelsPath)
df.sub <- data.frame(term = names(res.CHETAH$F1),
method = rep('CHETAH', length(res.CHETAH$F1)),
value = res.CHETAH$F1, stringsAsFactors = F)
df.sub <- rbind(df.sub,
data.frame(term = 'macro F1', method = 'CHETAH',
value = res.CHETAH$Mean_F1, stringsAsFactors = F))
df.sub <- rbind(df.sub,
data.frame(term = 'Accuracy', method = 'CHETAH',
value = res.CHETAH$Acc, stringsAsFactors = F))
df.heatmap <- rbind(df.heatmap, df.sub)
# scPred
# run_scPred(DataPath,LabelsPath,CV_RDataPath,OutputDir)
TrueLabelsPath <- paste0(OutputDir, 'scPred_True_Labels.csv')
PredLabelsPath <- paste0(OutputDir, 'scPred_Pred_Labels.csv')
res.scPred <- evaluate(TrueLabelsPath, PredLabelsPath)
df.sub <- data.frame(term = names(res.scPred$F1),
method = rep('scPred', length(res.scPred$F1)),
value = res.scPred$F1, stringsAsFactors = F)
df.sub <- rbind(df.sub,
data.frame(term = 'macro F1', method = 'scPred',
value = res.scPred$Mean_F1, stringsAsFactors = F))
df.sub <- rbind(df.sub,
data.frame(term = 'Accuracy', method = 'scPred',
value = res.scPred$Acc, stringsAsFactors = F))
df.heatmap <- rbind(df.heatmap, df.sub)
# sciBet
# run_sciBet(DataPath,LabelsPath,CV_RDataPath,OutputDir)
TrueLabelsPath <- paste0(OutputDir, 'sciBet_True_Labels.csv')
PredLabelsPath <- paste0(OutputDir, 'sciBet_Pred_Labels.csv')
res.sciBet <- evaluate(TrueLabelsPath, PredLabelsPath)
df.sub <- data.frame(term = names(res.sciBet$F1),
method = rep('sciBet', length(res.sciBet$F1)),
value = res.sciBet$F1, stringsAsFactors = F)
df.sub <- rbind(df.sub,
data.frame(term = 'macro F1', method = 'sciBet',
value = res.sciBet$Mean_F1, stringsAsFactors = F))
df.sub <- rbind(df.sub,
data.frame(term = 'Accuracy', method = 'sciBet',
value = res.sciBet$Acc, stringsAsFactors = F))
df.heatmap <- rbind(df.heatmap, df.sub)
# scRef
# run_scRef(DataPath,LabelsPath,CV_RDataPath,OutputDir)
TrueLabelsPath <- paste0(OutputDir, 'scRef_True_Labels.csv')
PredLabelsPath <- paste0(OutputDir, 'scRef_Pred_Labels_cell.csv')
# PredLabelsPath <- paste0(OutputDir, 'scRef_Pred_Labels.csv')
res.scRef <- evaluate(TrueLabelsPath, PredLabelsPath)
df.sub <- data.frame(term = names(res.scRef$F1),
method = rep('scRef', length(res.scRef$F1)),
value = res.scRef$F1, stringsAsFactors = F)
df.sub <- rbind(df.sub,
data.frame(term = 'macro F1', method = 'scRef',
value = res.scRef$Mean_F1, stringsAsFactors = F))
df.sub <- rbind(df.sub,
data.frame(term = 'Accuracy', method = 'scRef',
value = res.scRef$Acc, stringsAsFactors = F))
df.heatmap <- rbind(df.heatmap, df.sub)
# singleCellNet
# run_singleCellNet(DataPath,LabelsPath,CV_RDataPath,OutputDir)
TrueLabelsPath <- paste0(OutputDir, 'singleCellNet_True_Labels.csv')
PredLabelsPath <- paste0(OutputDir, 'singleCellNet_Pred_Labels.csv')
res.singleCellNet <- evaluate(TrueLabelsPath, PredLabelsPath)
df.sub <- data.frame(term = names(res.singleCellNet$F1),
method = rep('singleCellNet', length(res.singleCellNet$F1)),
value = res.singleCellNet$F1, stringsAsFactors = F)
df.sub <- rbind(df.sub,
data.frame(term = 'macro F1', method = 'singleCellNet',
value = res.singleCellNet$Mean_F1, stringsAsFactors = F))
df.sub <- rbind(df.sub,
data.frame(term = 'Accuracy', method = 'singleCellNet',
value = res.singleCellNet$Acc, stringsAsFactors = F))
df.heatmap <- rbind(df.heatmap, df.sub)
# CaSTLe
# run_CaSTLe(DataPath,LabelsPath,CV_RDataPath,OutputDir)
TrueLabelsPath <- paste0(OutputDir, 'CaSTLe_True_Labels.csv')
PredLabelsPath <- paste0(OutputDir, 'CaSTLe_Pred_Labels.csv')
res.CaSTLe <- evaluate(TrueLabelsPath, PredLabelsPath)
df.sub <- data.frame(term = names(res.CaSTLe$F1),
method = rep('CaSTLe', length(res.CaSTLe$F1)),
value = res.CaSTLe$F1, stringsAsFactors = F)
df.sub <- rbind(df.sub,
data.frame(term = 'macro F1', method = 'CaSTLe',
value = res.CaSTLe$Mean_F1, stringsAsFactors = F))
df.sub <- rbind(df.sub,
data.frame(term = 'Accuracy', method = 'CaSTLe',
value = res.CaSTLe$Acc, stringsAsFactors = F))
df.heatmap <- rbind(df.heatmap, df.sub)
# scID
# run_scID(DataPath,LabelsPath,CV_RDataPath,OutputDir)
TrueLabelsPath <- paste0(OutputDir, 'scID_True_Labels.csv')
PredLabelsPath <- paste0(OutputDir, 'scID_Pred_Labels.csv')
res.scID <- evaluate(TrueLabelsPath, PredLabelsPath)
df.sub <- data.frame(term = names(res.scID$F1),
method = rep('scID', length(res.scID$F1)),
value = res.scID$F1, stringsAsFactors = F)
df.sub <- rbind(df.sub,
data.frame(term = 'macro F1', method = 'scID',
value = res.scID$Mean_F1, stringsAsFactors = F))
df.sub <- rbind(df.sub,
data.frame(term = 'Accuracy', method = 'scID',
value = res.scID$Acc, stringsAsFactors = F))
df.heatmap <- rbind(df.heatmap, df.sub)
View(df.heatmap)
ggplot(data = df.heatmap, aes(method, term)) +
geom_tile(aes(fill = value)) +
scale_fill_continuous(low = "#FFFAFA", high = "#FF0000") +
theme_bw() +
theme(
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(angle = 90)
) +
geom_text(aes(label = round(value, 2)), family = "Arial", size = 2)
(ggplot)
# plot heatmap
library(ggplot)
# plot heatmap
library(ggplot2)
ggplot(data = df.heatmap, aes(method, term)) +
geom_tile(aes(fill = value)) +
scale_fill_continuous(low = "#FFFAFA", high = "#FF0000") +
theme_bw() +
theme(
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(angle = 90)
) +
geom_text(aes(label = round(value, 2)), family = "Arial", size = 2)
ggplot(data = df.heatmap, aes(method, term)) +
geom_tile(aes(fill = value)) +
scale_fill_continuous(low = "#FFFAFA", high = "#FF0000") +
theme_bw() +
theme(
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(angle = 45)
) +
geom_text(aes(label = round(value, 2)), family = "Arial", size = 3)
ggplot(data = df.heatmap, aes(method, term)) +
geom_tile(aes(fill = value)) +
scale_fill_continuous(low = "#FFFAFA", high = "#FF0000") +
theme_bw() +
theme(
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(angle = 45)
) +
geom_text(aes(label = round(value, 2)), family = "Arial", size = 2.5)
ggplot(data = df.heatmap, aes(method, term)) +
geom_tile(aes(fill = value)) +
scale_fill_continuous(low = "#FFFAFA", high = "#F8766D") +
theme_bw() +
theme(
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(angle = 45)
) +
geom_text(aes(label = round(value, 2)), family = "Arial", size = 2.5)
ggplot(data = df.heatmap, aes(method, term)) +
geom_tile(aes(fill = value)) +
scale_fill_continuous(low = "#FFFAFA", high = "	#8B0000") +
theme_bw() +
theme(
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(angle = 45)
) +
geom_text(aes(label = round(value, 2)), family = "Arial", size = 2.5)
ggplot(data = df.heatmap, aes(method, term)) +
geom_tile(aes(fill = value)) +
scale_fill_continuous(low = "#FFFAFA", high = "#8B0000") +
theme_bw() +
theme(
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(angle = 45)
) +
geom_text(aes(label = round(value, 2)), family = "Arial", size = 2.5)
ggplot(data = df.heatmap, aes(method, term)) +
geom_tile(aes(fill = value)) +
scale_fill_continuous(low = "#FFFAFA", high = "#A52A2A") +
theme_bw() +
theme(
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(angle = 45)
) +
geom_text(aes(label = round(value, 2)), family = "Arial", size = 2.5)
unique.term <- unique(df.heatmap$term)
unique.term
df.heatmap$term <- factor(df.heatmap$term, levels = unique.term)
ggplot(data = df.heatmap, aes(method, term)) +
geom_tile(aes(fill = value)) +
scale_fill_continuous(low = "#FFFAFA", high = "#A52A2A") +
theme_bw() +
theme(
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(angle = 45)
) +
geom_text(aes(label = round(value, 2)), family = "Arial", size = 2.5)
ggplot(data = df.heatmap, aes(reorder(method, X = ), term)) +
geom_tile(aes(fill = value)) +
scale_fill_continuous(low = "#FFFAFA", high = "#A52A2A") +
theme_bw() +
theme(
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(angle = 90)
) +
geom_text(aes(label = round(value, 2)), family = "Arial", size = 2.5)
ggplot(data = df.heatmap, aes(reorder(method, X = ), term)) +
geom_tile(aes(fill = value)) +
scale_fill_continuous(low = "#FFFAFA", high = "#A52A2A") +
theme_bw() +
theme(
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(angle = 90)
) +
geom_text(aes(label = round(value, 2)), family = "Arial", size = 2.5)
df.acc <- df.heatmap[df.heatmap$term == 'Accuracy', ]
View(df.acc)
df.heatmap$method <- factor(df.heatmap$method,
levels = df.acc$method[order(df.acc$value, decreasing = T)])
ggplot(data = df.heatmap, aes(method), term)) +
geom_tile(aes(fill = value)) +
scale_fill_continuous(low = "#FFFAFA", high = "#A52A2A") +
theme_bw() +
theme(
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(angle = 90)
) +
geom_text(aes(label = round(value, 2)), family = "Arial", size = 2.5)
ggplot(data = df.heatmap, aes(method), term) +
geom_tile(aes(fill = value)) +
scale_fill_continuous(low = "#FFFAFA", high = "#A52A2A") +
theme_bw() +
theme(
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(angle = 90)
) +
geom_text(aes(label = round(value, 2)), family = "Arial", size = 2.5)
ggplot(data = df.heatmap, aes(method, term)) +
geom_tile(aes(fill = value)) +
scale_fill_continuous(low = "#FFFAFA", high = "#A52A2A") +
theme_bw() +
theme(
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(angle = 90)
) +
geom_text(aes(label = round(value, 2)), family = "Arial", size = 2.5)
ggplot(data = df.heatmap, aes(method, term)) +
geom_tile(aes(fill = value)) +
scale_fill_continuous(low = "#FFFAFA", high = "#A52A2A") +
theme_bw() +
theme(
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(angle = 45)
) +
geom_text(aes(label = round(value, 2)), family = "Arial", size = 2.5)
ggplot(data = df.heatmap, aes(method, term)) +
geom_tile(aes(fill = value)) +
scale_fill_continuous(low = "#FFFAFA", high = "#A52A2A") +
theme_bw() +
theme(
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 0)
) +
geom_text(aes(label = round(value, 2)), family = "Arial", size = 2.5)
ggplot(data = df.heatmap, aes(method, term)) +
geom_tile(aes(fill = value)) +
scale_fill_continuous(low = "#FFFAFA", high = "#A52A2A") +
theme_bw() +
theme(
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 0.5)
) +
geom_text(aes(label = round(value, 2)), family = "Arial", size = 2.5)
ggplot(data = df.heatmap, aes(method, term)) +
geom_tile(aes(fill = value)) +
scale_fill_continuous(low = "#FFFAFA", high = "#A52A2A") +
theme_bw() +
theme(
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 0.6)
) +
geom_text(aes(label = round(value, 2)), family = "Arial", size = 2.5)
plot.heatmap <- ggplot(data = df.heatmap, aes(method, term)) +
geom_tile(aes(fill = value)) +
scale_fill_continuous(low = "#FFFAFA", high = "#A52A2A") +
theme_bw() +
theme(
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 0.6)
) +
geom_text(aes(label = round(value, 2)), family = "Arial", size = 2.5)
path <- '/home/drizzle_zhang/scRef/cross_validation/train4_test1'
ggsave(filename = 'heatmap.png', path = path, plot = plot.heatmap)
